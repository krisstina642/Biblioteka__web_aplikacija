package util;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class SendEmail {
   public static void main(String to, String pass) {
      // Put recipient’s address

      // Put sender’s address
      String from = "piaprogramiranje@gmail.com";
      final String username = "piaprogramiranje";//username generated by Mailtrap
      final String password = "piapiapia";//password generated by Mailtrap

      // Paste host address from the SMTP settings tab in your Mailtrap Inbox
      String host = "smtp.gmail.com";

      Properties props = new Properties();
      props.put("mail.smtp.auth", "true");
      props.put("mail.smtp.starttls.enable", "true");//it’s optional in Mailtrap  
      props.put("mail.smtp.host", host);
      props.put("mail.smtp.port", "587");// use one of the options in the SMTP settings tab in your Mailtrap Inbox
      props.put("mail.smtp.ssl.trust", "smtp.gmail.com");
      props.put("mail.smtp.debug", "true");
      props.put("mail.smtp.socketFactory.port", "587");
      props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
      props.put("mail.smtp.socketFactory.fallback", "false");

      // Get the Session object.
      Session session = Session.getInstance(props,
         new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
               return new PasswordAuthentication(username, password);
    }
         });

      try {
          
          
    // Create a default MimeMessage object.
    Message message = new MimeMessage(session);
 
    // Set From: header field 
    message.setFrom(new InternetAddress(from));
 
    // Set To: header field
    message.setRecipients(Message.RecipientType.TO,
               InternetAddress.parse(to));
 
    // Set Subject: header field
    message.setSubject("Zaboravljena lozinka");
 
    // Put the content of your message
    message.setText("Postovani, \nvasa lozinka je " + pass);

    // Send message
    Transport.send(message);

    System.out.println("Sent message successfully....");

      } catch (MessagingException e) {
         throw new RuntimeException(e);
      }
   }
   
   public static void komentarisanje(String who, String to, String knjiga) {
      // Put recipient’s address

      // Put sender’s address
      String from = "piaprogramiranje@gmail.com";
      final String username = "piaprogramiranje";//username generated by Mailtrap
      final String password = "piapiapia";//password generated by Mailtrap

      // Paste host address from the SMTP settings tab in your Mailtrap Inbox
      String host = "smtp.gmail.com";

      Properties props = new Properties();
      props.put("mail.smtp.auth", "true");
      props.put("mail.smtp.starttls.enable", "true");//it’s optional in Mailtrap  
      props.put("mail.smtp.host", host);
      props.put("mail.smtp.port", "587");// use one of the options in the SMTP settings tab in your Mailtrap Inbox
      props.put("mail.smtp.ssl.trust", "smtp.gmail.com");
      props.put("mail.smtp.debug", "true");
      props.put("mail.smtp.socketFactory.port", "587");
      props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
      props.put("mail.smtp.socketFactory.fallback", "false");

      // Get the Session object.
      Session session = Session.getInstance(props,
         new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
               return new PasswordAuthentication(username, password);
    }
         });

      try {
          
          
    // Create a default MimeMessage object.
    Message message = new MimeMessage(session);
 
    // Set From: header field 
    message.setFrom(new InternetAddress(from));
 
    // Set To: header field
    message.setRecipients(Message.RecipientType.TO,
               InternetAddress.parse(to));
 
    // Set Subject: header field
    message.setSubject("Vas prijatelj je ostavio novi komentar");
 
    // Put the content of your message
    message.setText("Postovani, \nKorisnik " + who + " je komentarisao knjigu "+ knjiga);

    // Send message
    Transport.send(message);

    System.out.println("Sent message successfully....");

      } catch (MessagingException e) {
         throw new RuntimeException(e);
      }
   }
}